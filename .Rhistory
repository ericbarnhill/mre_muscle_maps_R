df <- load_clean_data(path, groups, protocols, freqs)
source("interslice_load_clean_data.R")
df <- load_clean_data(path, groups, protocols, freqs)
source("interslice_load_clean_data.R")
df <- load_clean_data(path, groups, protocols, freqs)
source("interslice_load_clean_data.R")
df <- load_clean_data(path, groups, protocols, freqs)
df_med <- df$medians
df_med <- subset(df_med, Parameter=="absg")
uci <- function(y){quantile(y, 0.95)}
lci <- function(y){quantile(y, 0.05)}
ggplot(df_med, aes(x=Protocol, y=Median)) +
geom_point() +
stat_summary(fun.y = mean, fun.ymin = lci, fun.ymax = uci, geom="errorbar", col="gray45")
df_parcels <- df$brain_parcels
ggplot(df_parcels, aes(x=Protocol, y=Asym)) + geom_boxplot()
df_med <- df$medians
df_med <- subset(df_med, Parameter=="absg")
uci <- function(y){quantile(y, 0.95)}
lci <- function(y){quantile(y, 0.05)}
ggplot(df_med, aes(x=Protocol, y=Median)) +
geom_point() +
stat_summary(fun.y = mean, fun.ymin = lci, fun.ymax = uci, geom="errorbar", col="gray45")
df_parcels <- df$brain_parcels
ggplot(df_parcels, aes(x=Protocol, y=Asym)) + geom_boxplot()
source("interslice_load_clean_data.R")
df <- load_clean_data(path, groups, protocols, freqs)
df_med <- df$medians
df_med <- subset(df_med, Parameter=="absg")
uci <- function(y){quantile(y, 0.95)}
lci <- function(y){quantile(y, 0.05)}
ggplot(df_med, aes(x=Protocol, y=Median)) +
geom_point() +
stat_summary(fun.y = mean, fun.ymin = lci, fun.ymax = uci, geom="errorbar", col="gray45")
df_parcels <- df$brain_parcels
ggplot(df_parcels, aes(x=Protocol, y=Asym)) + geom_boxplot()
source("interslice_load_clean_data.R")
df <- load_clean_data(path, groups, protocols, freqs)
df_med <- df$medians
df_med <- subset(df_med, Parameter=="absg")
uci <- function(y){quantile(y, 0.95)}
lci <- function(y){quantile(y, 0.05)}
ggplot(df_med, aes(x=Protocol, y=Median)) +
geom_point() +
stat_summary(fun.y = mean, fun.ymin = lci, fun.ymax = uci, geom="errorbar", col="gray45")
path = "/media/ericbarnhill/backup/projects/2016-08-12-mredge-four-groups/results_interslice/"
code_path = "/home/ericbarnhill/Documents/code/R/2018-01-20-interslice-revision"
setwd(code_path)
groups = c("men_old", "men_young", "women_old", "women_young")
protocols = c("IPD_REMOVAL", "Z_XY", "NEGLECT", "2D")
freqs = c(30, 40, 50)
require(ggplot2)
source("interslice_load_clean_data.R")
df <- load_clean_data(path, groups, protocols, freqs)
df_med <- df$medians
df_med <- subset(df_med, Parameter=="absg")
uci <- function(y){quantile(y, 0.95)}
lci <- function(y){quantile(y, 0.05)}
ggplot(df_med, aes(x=Protocol, y=Median)) +
geom_point() +
stat_summary(fun.y = mean, fun.ymin = lci, fun.ymax = uci, geom="errorbar", col="gray45")
df_parcels <- df$brain_parcels
ggplot(df_parcels, aes(x=Protocol, y=Asym)) + geom_boxplot()
df_parcels <- df$brain_parcels
ggplot(df_parcels, aes(x=Protocol, y=Asym)) + geom_point()
df_med <- df$medians
df_med <- subset(df_med, Parameter=="absg")
uci <- function(y){quantile(y, 0.95)}
lci <- function(y){quantile(y, 0.05)}
ggplot(df_med, aes(x=Protocol, y=Median)) +
geom_boxplot()
#stat_summary(fun.y = mean, fun.ymin = lci, fun.ymax = uci, geom="errorbar", col="gray45")
df_med <- df$medians
df_med <- subset(df_med, Parameter=="absg")
uci <- function(y){quantile(y, 0.95)}
lci <- function(y){quantile(y, 0.05)}
ggplot(df_med, aes(x=Protocol, y=Median)) +
geom_boxplot() +
scale_y_continuous(limits = c(0, 2500))
#stat_summary(fun.y = mean, fun.ymin = lci, fun.ymax = uci, geom="errorbar", col="gray45")
df_med <- df$medians
df_med <- subset(df_med, Parameter=="absg")
uci <- function(y){quantile(y, 0.95)}
lci <- function(y){quantile(y, 0.05)}
ggplot(df_med, aes(x=Protocol, y=Median)) +
geom_boxplot() +
scale_y_continuous(limits = c(500, 2500))
#stat_summary(fun.y = mean, fun.ymin = lci, fun.ymax = uci, geom="errorbar", col="gray45")
df_med <- df$medians
df_med <- subset(df_med, Parameter=="absg")
uci <- function(y){quantile(y, 0.95)}
lci <- function(y){quantile(y, 0.05)}
ggplot(df_med, aes(x=Protocol, y=Median)) +
geom_boxplot() +
scale_y_continuous(limits = c(750, 2500))
#stat_summary(fun.y = mean, fun.ymin = lci, fun.ymax = uci, geom="errorbar", col="gray45")
df_med <- df$medians
df_med <- subset(df_med, Parameter=="absg")
uci <- function(y){quantile(y, 0.95)}
lci <- function(y){quantile(y, 0.05)}
ggplot(df_med, aes(x=Protocol, y=Median)) +
geom_boxplot() +
scale_y_continuous(limits = c(0, 2500))
#stat_summary(fun.y = mean, fun.ymin = lci, fun.ymax = uci, geom="errorbar", col="gray45")
df_med <- df$medians
df_med <- subset(df_med, Parameter=="absg")
uci <- function(y){quantile(y, 0.95)}
lci <- function(y){quantile(y, 0.05)}
ggplot(df_med, aes(x=Protocol, y=Median)) +
geom_point(alpha = 0.5) +
scale_y_continuous(limits = c(0, 2500))
stat_summary(fun.y = mean, fun.ymin = lci, fun.ymax = uci, geom="errorbar", col="gray45")
df_med <- df$medians
df_med <- subset(df_med, Parameter=="absg")
uci <- function(y){quantile(y, 0.95)}
lci <- function(y){quantile(y, 0.05)}
ggplot(df_med, aes(x=Protocol, y=Median)) +
geom_point(alpha = 0.5) +
scale_y_continuous(limits = c(0, 2500)) +
stat_summary(fun.y = mean, fun.ymin = lci, fun.ymax = uci, geom="errorbar", col="gray45")
df_med <- df$medians
df_med <- subset(df_med, Parameter=="absg")
uci <- function(y){quantile(y, 0.95)}
lci <- function(y){quantile(y, 0.05)}
ggplot(df_med, aes(x=Protocol, y=Median)) +
geom_point(col='gray')+
scale_y_continuous(limits = c(0, 2500)) +
stat_summary(fun.y = mean, fun.ymin = lci, fun.ymax = uci, geom="errorbar", col="gray45")
df_med <- df$medians
df_med <- subset(df_med, Parameter=="absg")
uci <- function(y){quantile(y, 0.95)}
lci <- function(y){quantile(y, 0.05)}
ggplot(df_med, aes(x=Protocol, y=Median)) +
geom_point(col='gray')+
scale_y_continuous(limits = c(0, 2500)) +
stat_summary(fun.y = mean, fun.ymin = lci, fun.ymax = uci, geom="errorbar", col="black")
summary(df_med)
?aggregate
tab <- aggregate(df_med, by = Protocol, FUN = uci)
tab <- aggregate(df_med, by = df_med$Protocol, FUN = uci)
tab <- aggregate(df_med, by = list(levels(Protocol)), FUN = uci)
tab <- aggregate(df_med, by = list(levels(df_med$Protocol)), FUN = uci)
tab <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = uci)
tab
ucis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = uci)
lcis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = lci)
median <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = median)
tab <- data.frame(median, ucis, lcis)
ucis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = uci)
lcis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = lci)
median <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = median)
tab <- data.frame(median, ucis, lcis)
print(tab)
ucis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = uci)
lcis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = lci)
median <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = median)
tab <- data.frame(median, ucis, lcis)
print(ucis)
ucis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = uci)
lcis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = lci)
median <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = median)
tab <- rbind(median, ucis, lcis)
print(tab)
ucis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = uci)
lcis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = lci)
median <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = median)
tab <- cbind(median, ucis, lcis)
print(tab)
summary(tab)
ucis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = uci)
lcis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = lci)
median <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = median)
tab <- cbind(median[,2], ucis[,2], lcis[,2])
print(tab)
ucis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = uci)
lcis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = lci)
median <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = median)
tab <- cbind(median[,2], ucis[,2], lcis[,2])
colnames(tab) <- c("Median", "5th Pct.", "95th Pct.")
rownames(tab) <- c("Ipd Removal", "Z-then-XY", "Neglect", "2D")
print(tab)
ucis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = uci)
lcis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = lci)
median <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = median)
tab <- cbind(median[,2], ucis[,2], lcis[,2])
colnames(tab) <- c("Median", "5th Pct.", "95th Pct.")
rownames(tab) <- c("Ipd Removal", "Z-then-XY", "Neglect", "2D")
perm <- c(1,3,4,2)
tab = tab[perm,]
print(tab)
ucis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = uci)
lcis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = lci)
median <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = median)
tab <- cbind(median[,2], ucis[,2], lcis[,2])
colnames(tab) <- c("Median", "5th Pct.", "95th Pct.")
rownames(tab) <- c("IPD Removal", "Z-then-XY", "Neglect", "2D")
perm <- c(1,3,4,2)
tab = tab[perm,]
print(tab)
ucis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = uci)
lcis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = lci)
median <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = median)
tab <- cbind(median[,2], lcis[,2], ucis[,2])
colnames(tab) <- c("Median", "5th Pct.", "95th Pct.")
rownames(tab) <- c("IPD Removal", "Z-then-XY", "Neglect", "2D")
perm <- c(1,3,4,2)
tab = tab[perm,]
print(tab)
range
range(-10:150)
range([-10:150])
ucis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = uci)
lcis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = lci)
median <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = median)
range_diff <- function(x){range(x)[2] - range(x)[1]}
range <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = range_diff)
tab <- cbind(median[,2], lcis[,2], ucis[,2], range[,2])
colnames(tab) <- c("Median", "5th Pct.", "95th Pct.", "Range")
rownames(tab) <- c("IPD Removal", "Z-then-XY", "Neglect", "2D")
perm <- c(1,3,4,2)
tab = tab[perm,]
print(tab)
ucis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = uci)
lcis <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = lci)
median <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = median)
range_diff <- function(x){range(x)[2] - range(x)[1]}
range <- aggregate(df_med$Median, by = list(df_med$Protocol), FUN = range_diff)
tab <- cbind(median[,2], lcis[,2], ucis[,2], range[,2])
colnames(tab) <- c("Median", "5th Pct.", "95th Pct.", "Range")
rownames(tab) <- c("IPD Removal", "Isotropic", "Neglect", "2D")
perm <- c(1,3,4,2)
tab = tab[perm,]
print(tab)
knitr::opts_chunk$set(echo = TRUE)
require(rjags)
require(HDInterval)
require(ggplot2)
require(captioner)
require(tidyr)
proj_path="/home/ericbarnhill/Documents/code/R/mre_muscle_maps_R/"
setwd(proj_path)
source(file.path(proj_path, "mre_muscle_captions.R"))
source('muscle_load_clean_data.R')
#data_tall <- load_clean_data(file.path(proj_path, data_path))
# temporarily downsample more, to make models go faster
data_tall <- load_clean_8xds(file.path(proj_path, data_path))
source('muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
# temporarily downsample more, to make models go faster
#data_tall <- load_clean_8xds(file.path(proj_path, data_path))
summary(data_tall)
levels(as.factor(subj_id))
levels(as.factor(data_tall$subj_id))
summary(levels(as.factor(subj_id)), maxsum=50)
summary(levels(as.factor(data_tall$subj_id)), maxsum=50)
summary(as.factor(data_tall$subj_id), maxsum=50)
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
source('muscle_load_clean_data.R')
proj_path="/home/ericbarnhill/Documents/code/R/mre_muscle_maps_R/"
setwd(proj_path)
source('muscle_load_clean_data.R')
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
m_file
s_dir
s_dir
m_dir
summary(m_file)
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
summary(data_tall)
source('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
max(m_file$subj_id)
(max(m_file$subj_id) > 20)
source('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
source('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
data_tall <- load_clean_data(file.path(proj_path, data_path))
source('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
source('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
source('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
data_tall <- load_clean_data(file.path(proj_path, data_path))
summary(m_file)
str(m_file)
plot(m_file$subj_id)
hist(m_file$subj_id)
file.path(path, s, m)
source('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
source('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
data_tall <- load_clean_data(file.path(proj_path, data_path))
source('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
summary(global_vals_rep)
?apply
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
summary(global_vals_rep)
dim(m_file)
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
data_tall <- load_clean_data(file.path(proj_path, data_path))
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
summary(global_vals_rep)
str(global_vals_rep)
summary(global_vals_rep)
global_vals_rep <- global_vals_rep %>% mutate(pix_id = 112*X + Y)
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
summary(m_file)
tail(m_file)
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
summary(m_file)
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
summary(m_file)
source('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
summary(data_tall)
levels(as.factor(subj_id))
levels(as.factor(data_tall$subj_id))
summary(as.factor(data_tall$subj_id))
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
summary(data_tall)
data_tall$cond_id <- factor(data_tall$cond_id)
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall$cond_id <- factor(data_tall$cond_id)
data_tall <- load_clean_data(file.path(proj_path, data_path))
summary(data_tall)
levels(as.factor(data_tall$cond_id)
)==
levels(as.factor(data_tall$cond_id))
dim(data_tall)
dim(data_tall)
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
data_tall[which(data_tall$Value > 0),]
data_tall[which(data_tall$Value <= 0),]
head(data_tall)
?set_colnames
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
?ddply
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
data_tall <- data_tall[,-c(2,7)] %>%
set_colnames[6:8] <- c("x", "y", "value") %>%
ddply(3:7, factor)
colnames(data_tall)
data_tall <- data_tall[,-c(2,7)] %>%
set_colnames[6:8] <- c("x", "y", "value") %>%
ddply(.(pix_id, musc_id, grp_id,  cond_id,  subj_id, injury_id), factor)
data_tall <- data_tall[,-c(2,7)] %>%
set_colnames[6:8] <- c("x", "y", "value")
data_tall <- data_tall[,-c(2,7)] %>%
set_colnames[6:8] <- c("x", "y", "value")
?Set_colnames
?set_colnames
?set_colnames
??set_colnames
data_tall <- data_tall[which(data_tall$Value > 0),]
data_tall <- data_tall[,-c(2,7)]
colnames(data_tall)[6:8] <- c("x", "y", "value")
ddply(data_tall, .(pix_id, musc_id, grp_id,  cond_id,  subj_id, injury_id), factor)
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
ddply(data_tall, .(pix_id, musc_id, grp_id,  cond_id,  subj_id, injury_id), factor)
colnames(data_tall)
ddply(data_tall, .(pix_id, musc_id, grp_id,  cond_id,  subj_id), factor)
ddply(data_tall, .(pix_id, musc_id, grp_id,  cond_id,  subj_id), factor)
source('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
source('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
data_tall <- load_clean_data(file.path(proj_path, data_path))
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
data_tall[,1:5] <-lapply(data_tall[,1:5], factor)
data_tall$x <- data_tall$x / 4
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
summary(data_tall)
levels(subj_id)
levels(data_tall$subj_id)
describe(data_tall$subj_id)
library(Hmisc)
describe(data_tall$subj_id)
source('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
data_tall <- load_clean_data(file.path(proj_path, data_path))
source('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
source('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
data_tall <- load_clean_data(file.path(proj_path, data_path))
debugSource('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
mead(m_file)
head(m_file)
source('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
summary(data_tall)
describe(data_tall$subj_id)
source('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path))
install.packages(brms)
install.packages('brms')
install.packages('dlpyr')
install.packages('dplyr')
install.packages("dplyr")
library(brms)
colnames(data_tall)
levels(data_tall$cond_id
)
mod <- brm(formula = 1 + musc_id + (1 + musc_id | cond), data = data_tall)
mod <- brm(formula = 1 + musc_id + (1 + musc_id | cond), data = data_tall, family = "lognormal")
vignette('brms_overview')
names(data_tall)
data("kidney")
head(kidney, n=3)
fit1 <- brm(formula = time | cens(censored) ~ age * sex + disease
+ (1 + age|patient),
data = kidney, family = lognormal(),
prior = c(set_prior("normal(0,5)", class = "b"),
set_prior("cauchy(0,2)", class = "sd"),
set_prior("lkj(2)", class = "cor")),
warmup = 1000, iter = 2000, chains = 4,
control = list(adapt_delta = 0.95))
mod <- brm(formula = 1 + musc_id, data = data_tall, family = "lognormal")
mod <- brm(formula = 1 + musc_id, data = data_tall, family = "lognormal", prior <-  )
mod <- brm(formula = 1 + musc_id, data = data_tall, family = "lognormal", prior <-
c(set_prior("lognormal(1000, 500)", coef="musc_id")))
mod <- brm(formula = 1, data = data_tall)
mod <- brm(formula = value ~ 1 + musc_id, data = data_tall, family = "lognormal")
mod <- brm(formula = value ~ 1 + musc_id + (1 + musc_id | cond_id),
data = data_tall,
family = "lognormal",
prior <- c(
set_prior("normal(0, 100)", coef="musc_id"),
set_prior("normal(0, 100)", coef="cond_id")
)
)
mod <- brm(formula = value ~ 1 + musc_id + (1 + musc_id | cond_id),
data = data_tall,
family = "lognormal",
prior <- c(
set_prior("normal(0, 100)", coef="musc_id"),
set_prior("normal(0, 100)", coef="cond_id")
)
)
mod
mod <- brm(formula = value ~ 1 + musc_id + (1 + musc_id | cond_id), data=data_tall)
mod <- brm(formula = value ~ 1 + musc_id + (1 + musc_id | cond_id),
data = data_tall,
family = "lognormal",
prior = c(
set_prior("normal(0, 100)", coef="musc_id"),
set_prior("normal(0, 100)", coef="cond_id")
)
)
mod <- brm(formula = value ~ 1 + musc_id + (1 + musc_id | cond_id), data = data_tall, family = "lognormal", prior = c( set_prior("normal(0, 100)", coef="musc_id"), set_prior("normal(0, 100)", coef="cond_id")))
mod <- brm(formula = value ~ 1 + musc_id + (1 + musc_id | cond_id), data = data_tall, family = "lognormal")
data_tall <- load_clean_data(file.path(proj_path, data_path), 8)
summary(data_tall)
dim(data_tall)
data_tall <- load_clean_data(file.path(proj_path, data_path), 4)
dim(data_tall)
source('~/Documents/code/R/mre_muscle_maps_R/muscle_load_clean_data.R')
data_tall <- load_clean_data(file.path(proj_path, data_path), 4)
data_tall <- load_clean_data(file.path(proj_path, data_path), 8)
dim(data_tall)
summary(data_tall)
describe(data_tall$pix_id)
describe(data_tall$pix_id)
summary(data_tall$pix_id)
data_tall <- load_clean_data(file.path(proj_path, data_path), 16)
summary(data_tall)
mod <- brm(formula = value ~ 1 + musc_id + (1 + musc_id | cond_id), data = data_tall, family = "lognormal")
mod <- glmer(formula = value ~ 1 + musc_id + (1 + musc_id | cond_id), data = data_tall, family = "lognormal")
glmer
?gomer
?glmer
??glmer
library(lme4)
mod <- glmer(formula = value ~ 1 + musc_id + (1 + musc_id | cond_id), data = data_tall, family = "lognormal")
quit()
